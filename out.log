$VAR= require('fs');
$FUNC                (major,minor,patch)
$
    $VAR= JSON.parse(fs.readFileSync('./package.json','utf-8'));
    $VAR= pkg.version.split('.');
    
    $VAR= (v.length);
    $VAR= []
    for($VAR= 0; l< 3; l++)
    $
       $VAR= parseInt(v[l]);
       
       
       ver.push(i)
    $
    ver[2] += patch;
    ver[1] += minor;
    ver[0] += major;
   pkg.version = ver.toString().replaceAll(',','.')
   console.log(ver);
  fs.writeFileSync('./package.json',JSON.stringify(pkg))
$
$FUNC              (patch)
$
    $VAR= JSON.parse(fs.readFileSync('./package.json','utf-8'));
    $VAR= pkg.version.split('.');
    
    $VAR= (v.length);
    $VAR= []
    for($VAR= 0; l< 3; l++)
    $
       $VAR= parseInt(v[l]);
       
       
       ver.push(i)
    $
    ver[2] = patch;
   pkg.version = ver.toString().replaceAll(',','.')
   console.log(ver);
  fs.writeFileSync('./package.json',JSON.stringify(pkg))
$
$FUNC              (minor)
$
    $VAR= JSON.parse(fs.readFileSync('./package.json','utf-8'));
    $VAR= pkg.version.split('.');
    
    $VAR= (v.length);
    $VAR= []
    for($VAR= 0; l< 3; l++)
    $
       $VAR= parseInt(v[l]);
       
       
       ver.push(i)
    $
    ver[1] = minor;
   pkg.version = ver.toString().replaceAll(',','.')
   console.log(ver);
  fs.writeFileSync('./package.json',JSON.stringify(pkg))
$
module.exports = $ addToVersion, setToPatch $